def generate_sap_invoice_json(invoice):
    """Generate SAP B1 Invoice JSON based on invoice line items"""
    try:
        # Group serial numbers by ItemCode and WarehouseCode for proper line grouping
        grouped_items = {}

        for line in invoice.lines:
            for serial_item in line.serial_numbers:
                # Create a unique key for grouping: ItemCode + WarehouseCode
                group_key = f"{serial_item.item_code}_{serial_item.warehouse_code}"

                if group_key not in grouped_items:
                    grouped_items[group_key] = {
                        'ItemCode': serial_item.item_code,
                        'ItemDescription': serial_item.item_description,
                        'WarehouseCode': serial_item.warehouse_code,
                        'SerialNumbers': []
                    }

                # Just store serials, we'll assign BaseLineNumber later
                grouped_items[group_key]['SerialNumbers'].append({
                    'InternalSerialNumber': serial_item.serial_number,
                    'Quantity': float(serial_item.quantity)
                })

        # Convert grouped items to DocumentLines
        document_lines = []
        base_line_number = 0  # counter for items

        for group_key, item_data in grouped_items.items():
            # Assign same BaseLineNumber for all serials of this item
            for serial in item_data['SerialNumbers']:
                serial['BaseLineNumber'] = base_line_number

            document_lines.append({
                'ItemCode': item_data['ItemCode'],
                'ItemDescription': item_data['ItemDescription'],
                'Quantity': float(len(item_data['SerialNumbers'])),  # Total quantity = number of serials
                'WarehouseCode': item_data['WarehouseCode'],
                # 'TaxCode': item_data['TaxCode'],
                'SerialNumbers': item_data['SerialNumbers']
            })

            base_line_number += 1  # move to next item line

        # Generate SAP B1 Invoice JSON
        sap_invoice = {
            'DocDate': datetime.now().strftime('%Y-%m-%dT%H:%M:%S.%fZ'),
            'DocDueDate': (datetime.now() + timedelta(days=30)).strftime('%Y-%m-%dT%H:%M:%S.%fZ'),
            'BPL_IDAssignedToInvoice': 5,  # Default branch
            'BPLName': invoice.BPLName,
            'CardCode': invoice.customer_code,
            'DocumentLines': document_lines
        }

        logging.info(f"üìÑ Generated SAP Invoice JSON with {len(document_lines)} document lines for invoice {invoice.id}")
        return sap_invoice

    except Exception as e:
        logging.error(f"‚ùå Error generating SAP invoice JSON: {str(e)}")
        raise